---
import type { Frontmatter } from '../config'
import Base from './base.astro'
import LeftSidebar from '../components/leftsidebar.astro'
import fs from 'node:fs';
import path from 'node:path';
import { Icon } from 'astro-icon'

type Props = {
  frontmatter: Frontmatter,
  headings: any
}

const { frontmatter, headings } = Astro.props
const currentPage = Astro.url.toString()

const {id} = headings

const contenedor_path = `src/storage/documents/contenedor_${id}/`

const URL_VIDEO_CONTENEDORES = {
  1: "https://www.youtube.com/embed/m4GhPRwFoLM?si=cNOpdgbkkMEBGQay",
  2: "https://www.youtube.com/embed/rT0Qkhg5lEQ?si=9Te1tTCUXU4NYZf4",
  3: "https://www.youtube.com/embed/-C46BWnqavw?si=1e3yfgLWYSm3tWqa",
}

var dirToJSON = function(dir: string, done: Function) {
  var results : Array<any> = [];

  function recWalk(d: any, res: any) {
    var list = fs.readdirSync(d);
    list.forEach((name) => {
      // var filepath = path.join('/'+dir, name)
      var tempResults : Array<any>  = [];
      var file = path.join(d, name);
      var stat = fs.statSync(file);
      if (stat && stat.isDirectory()) {
        recWalk(file, tempResults);
        var obj : any = {};
        obj[name] = tempResults;
        res.push({'name': name, 'children': tempResults, 'type': 'folder', 'path': '\\'+file});
        // res.push({'name': name, 'children': tempResults, 'type': 'folder', 'path': '/'+encodeURI(file.split('\\').slice(-2).join('/'))});
      } else {
        res.push({'name': name, 'type': 'file', 'path': '\\'+file}); 
        // res.push({'name': name, 'type': 'file', 'path': '/'+encodeURI(file.split('\\').slice(-2).join('/'))}); 
      }
    });
  }

  try {
    recWalk(dir, results);
    done(null, results);
  } catch(err) {
    done(err); 
  }
}; 
 
let dir_json : Array<any> = []
dirToJSON(contenedor_path, function(err: any, results: any) {
  if (err) console.log(err);
  else dir_json = results;
});


---

<Base frontmatter={frontmatter}>
  <main
    class='h-full px-0 bg-gray-100 flex relative md:snap-center h-[calc(100vh-4rem)]'
    x-data='{isOpen: false}'
  > 
    <aside title='Site Navigation' 
    class="hidden fixed z-50 md:block md:relative"
    x-bind:class="{'hidden': !isOpen }"
    >
      <LeftSidebar currentPage={currentPage} items={dir_json} />
    </aside>
    <button 
      class="md:hidden"
      x-on:click='isOpen = !isOpen'
      > 
        <Icon
          x-bind:class="{'hidden': isOpen }"
          class='block h-6 w-6'
          pack='line-md'
          name=arrow-open-right
        />
        <Icon
          x-bind:class="{'hidden': !isOpen }"
          class='block h-6 w-6'
          pack='line-md'
          name=arrow-open-left
        />
    </button>
    <div 
      class='w-full h-100 mx-5 md:mx-10 p-5 bg-white shadow-lg my-5 relative'
      x-bind:class="{'blur-sm': isOpen}"
      >
        <div 
          style="background-image: url('/src/assets/gallery/png/forest_trees_2.png')"
          class="bg-bottom bg-contain h-2/3 bottom-0 left-0 absolute  w-full bg-repeat-x z-0" 
          ></div> 
        
        <div class="absolute p-5 top-0 left-0 w-full h-full">
          
          <h1 class="text-4xl text-blue"> Contenedor Pedag√≥gico #{id} </h1>
          <!-- <embed 
            src={dir_json[0]['children'][0]['path']}
            class="w-full h-5/6 mt-10 mx-auto" 
            type="application/pdf"
            id="pdf_viewer"
            > -->
            <div class="w-5/6 h-4/6 mx-auto mt-10 shadow-2xl">
              <iframe 
                class="w-full h-full shadow-2xl"
                src={URL_VIDEO_CONTENEDORES[id]} 
                title="YouTube video player" 
                frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                allowfullscreen>
              </iframe>
            </div>
        </div>
      
      <slot />
    </div>
    </main>
  </Base>